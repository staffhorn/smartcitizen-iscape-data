{
	"Poly(Log(CO_MICS)) + Poly(T) + PMS": {
		"type": "OLS",
		"expression": "REF ~ np.log10(A) + np.power(np.log10(A),2) + B + np.power(B,2) + D",
		"ratio_train": 0.75,
		"alpha_filter": 0.9,
		"features": {
			"REF": "CO_AD_BASE_60",
			"A": "CO_MICS_RAW",
            "B": "TEMP",
            "C": "HUM",
            "D": "EXT_PM_25"
		}
	},

	"Log(CO_MICS) + Poly(T) + D": {
		"type": "OLS",
		"expression": "REF ~ np.log10(A)  + B + np.power(B,2) + D",
		"ratio_train": 0.75,
		"alpha_filter": 0.9,
		"features": {
			"REF": "CO_AD_BASE_60",
			"A": "CO_MICS_RAW",
            "B": "TEMP",
            "C": "HUM",
            "D": "EXT_PM_25"
		}
	},


	"Log(CO_MICS) + Poly(T) + Poly(D)": {
		"type": "OLS",
		"expression": "REF ~ np.log10(A)  + B + np.power(B,2) + np.power(D, 2)",
		"ratio_train": 0.75,
		"alpha_filter": 0.9,
		"features": {
			"REF": "CO_AD_BASE_60",
			"A": "CO_MICS_RAW",
            "B": "TEMP",
            "C": "HUM",
            "D": "EXT_PM_25"
		}
	},

	"LSTM CO, T, PM2.5, HUM - a: 0.4 - T2": {
		"type": "LSTM",
		"ratio_train": 0.75,
		"alpha_filter": 0.4,
		"features": {
			"REF": "CO_AD_BASE_60",
			"A": "CO_MICS_RAW",
            "B": "TEMP",
            "C": "HUM",
            "D": "EXT_PM_25"
		},
		"n_lags": 2,
		"epochs": 20,
		"batch_size": 72,
		"loss": "mse",
		"optimizer": "adam",
		"verbose": 0,
		"layers": [
			{
				"type": "lstm",
				"neurons": 100,
				"return_seq": true
			},
			{
				"type": "dropout",
				"rate": 0.05
			},
			{
				"type": "lstm",
				"neurons": 100,
				"return_seq": true
			},
			{
				"type": "lstm",
				"neurons": 50,
				"return_seq": false
			},
			{
				"type": "dropout",
				"rate": 0.05
			},
			{
				"type": "dense",
				"neurons": 1,
				"activation": "linear"
			}
		]
	}
}
